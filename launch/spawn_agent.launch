<?xml version="1.0"?>

<launch>
  <arg name="id" />
  <arg name="name" default="agent_$(arg id)" />
  <arg name="mav_name" default="ardrone"/>
  <arg name="namespace" default="uavs"/>
  <arg name="model" default="$(find opt_view)/robots/flying_camera.urdf.xacro"/>
  <arg name="tf_prefix" default="$(optenv ROS_NAMESPACE)"/>
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>
  <arg name="z" default="0.1"/>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="false"/>
  <arg name="log_file" default="$(arg mav_name)"/>
  <arg name="wait_to_record_bag" default="false"/>
  <arg name="enable_mavlink_interface" default="false"/>

  <group ns="$(arg name)">
    <!-- send the robot XML to param server -->
    <param name="robot_description" command="
      $(find xacro)/xacro.py '$(arg model)'
      enable_logging:=$(arg enable_logging)
      enable_ground_truth:=$(arg enable_ground_truth)
      enable_mavlink_interface:=$(arg enable_mavlink_interface)
      log_file:=$(arg log_file)
      wait_to_record_bag:=$(arg wait_to_record_bag)
      mav_name:=$(arg mav_name)
      name:=$(arg name)
      namespace:=/uavs/$(arg name)
      id:=$(arg id)"
    />
    <param name="tf_prefix" type="string" value="$(arg tf_prefix)" />

    <!-- push robot_description to factory and spawn robot in gazebo -->
    <node name="spawn_$(arg name)" pkg="gazebo_ros" type="spawn_model"
     args="-param robot_description
           -urdf
           -x $(arg x)
           -y $(arg y)
           -z $(arg z)
           -model $(arg name)"
     respawn="false" output="screen">
    </node>

    <rosparam file="$(find opt_view)/config/joint_state_controller.yaml" command="load" /> 

    <!-- spawn arm controller -->
    <node pkg="controller_manager" type="spawner" name="camera_joint_controller_spawner"
    respawn="false" output="screen" 
    args="camera_joint_control/camera_joint_controller">
    </node>

    <node name="lee_position_controller_node" pkg="rotors_control" type="lee_position_controller_node" output="screen">
      <rosparam command="load" file="$(find rotors_gazebo)/resource/lee_controller_$(arg mav_name).yaml" />
      <rosparam command="load" file="$(find rotors_gazebo)/resource/$(arg mav_name).yaml" />
      <remap from="odometry" to="uav_odometry/odometry" />
    </node>

    <rosparam file="$(find opt_view)/config/backprojection.yaml" command="load" />


    <node name="backprojection_$(arg id)" pkg="opt_view" type="backprojection" output="screen" />
      <param name="backprojection/agent_id" type="string" value="$(arg id)" />
      <param name="backprojection/camera_info_topic" type="string" value="camera1/camera_info" />
      <param name="backprojection/camera_odom_topic" type="string" value="camera_odometry/odometry" />
      <param name="backprojection/projected_view_topic" type="string" value="predicted_view/update" />
  </group>
</launch>